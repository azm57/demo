package com.epam.utils;


import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;

public class ExcelToMapDataReading {
	
	public static void main(String[] args){
		
		
		ExcelToMapDataReading.Read("D:\\SeleniumJavaFramework\\test_excelreading.xls");
//		System.out.println(returedHash);
		
	}
	 public static void Read(String fileName)
	    {
	        // Used the LinkedHashMap and LikedList to maintain the order
	       LinkedHashMap<Integer, List> hashMap = new LinkedHashMap<Integer, List>();
	        String sheetName = null;
	        // Create an ArrayList to store the data read from excel sheet
	        List sheetData = new ArrayList();
	        FileInputStream fis = null	;
	        try
	        {
	            fis = new FileInputStream(fileName);
	            // Create an excel workbook from the file system
	            Workbook workBook = new HSSFWorkbook(fis);
	            // Get the first sheet on the workbook.
	            for (int i = 0; i < workBook.getNumberOfSheets(); i++)
	            {
	                org.apache.poi.ss.usermodel.Sheet sheet = workBook.getSheetAt(0);
	                Iterator rows = sheet.rowIterator();
	                while (rows.hasNext())
	                {
	                    XSSFRow row = (XSSFRow) rows.next();
	                    Iterator cells = row.cellIterator();
	                    List data = new LinkedList();
	                    while (cells.hasNext())
	                    {
	                        XSSFCell cell = (XSSFCell) cells.next();
	                        cell.setCellType(Cell.CELL_TYPE_STRING);
	                        data.add(cell);
	                    }
	                   sheetData.add(data);
	                   hashMap.put(row.getRowNum(), data); 
	                   
	                }   
	            }
	            
	        }
	        
	        catch (IOException e)
	        {
	            e.printStackTrace();
	        }
	        finally
	        {
	            if (fis != null)
	            {
	                try
	                {
	                    fis.close();
	                }
	                catch (IOException e)
	                {
	                    // TODO Auto-generated catch block
	                    e.printStackTrace();
	                }
	            }
	        }
System.out.println("TEST");
//	        return hashMap;
}
}
